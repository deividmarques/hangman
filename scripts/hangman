#!/bin/bash

# The first arg provided here will be used as command option
COMMAND=$1

case $COMMAND in
  setup)
    # Ensure that UID variable exists and is exported
    export UID=$(id -u)

    printf "Creating containers... "
    docker-compose build &> /dev/null
    printf "Created!\n"

    printf "Running mix deps.get to configure project dependencies... "
    docker-compose run api 'mix deps.get' &> /dev/null
    printf "Done!\n"
    
    printf "Building api assets with npm... "
    docker-compose run api /bin/sh -c 'cd ./assets && npm install' &> /dev/null
    printf "Done!\n"

    printf "Installing frontend dependencies... "
    docker-compose run frontend /bin/sh -c 'npm install'
    printf "Done!\n"

    printf "Finished! \\o/"
  ;;

  db:create)
    echo "Preparing database... "
    docker-compose run api mix ecto.create
    echo "Done"
  ;;

  start)
    docker-compose up
  ;;

  phx:console)
    docker-compose run api iex -S mix phx.server
  ;;

  # Default option, display help information
  *)
    echo "Invalid option. The allowed ones are:"
    echo "setup          - Setup the hangman project"
    echo "start          - Start the hangman project (must run setup first!)"
    echo "db:create      - Create the hangman database"
    echo "phx:console    - Run the hangman console"
  ;;
esac
